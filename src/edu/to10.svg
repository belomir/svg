<?xml version="1.0" encoding="utf-8"?>
<!-- © Sergey Roganov aka belomir -->
<!-- © Сергей Роганов aka Беломир -->
<!-- GNU/GPL v.3+ -->
<svg
	xmlns="http://www.w3.org/2000/svg"
	xmlns:xlink="http://www.w3.org/1999/xlink"
	viewBox="-1 -1 102 102"
>
	<defs>
		<filter id="draw">
			<feTurbulence id="ft" baseFrequency=".1" result="turbulence" />
			<feDisplacementMap in="SourceGraphic" in2="turbulence" scale="1" />
		</filter>

		<filter id="paper" x="0" y="0" width="100%" height="100%">
			<feTurbulence id="papft" type="fractalNoise" baseFrequency=".04" numOctaves="5" result="noi" />
			<feDiffuseLighting lighting-color="white" surfaceScale="5" result="pap">
				<feDistantLight azimuth="45" elevation="100" />
			</feDiffuseLighting>
		</filter>

		<pattern id="rsa" width="30" height="20" patternUnits="userSpaceOnUse">
			<g style="fill: black; stroke: none; font-size: 5px; opacity: .01875;" transform="translate(1, 5) rotate(-33 5.0 5.0)">
				<path style="fill: black; stroke: none;" d="M1.5,1.5 v7.0 h1.25 v-5.75 h2.25 a2.25,2.25 0 0,1 2.25,2.25 v.5 l-.5,-.5 h-1.75 l3.5,3.5 v-3.5 a3.5,3.5 0 0,0 -3.5,-3.5 z" />
				<path style="fill: black; stroke: none;" d="M3.25,3.25 v2.5 l2.75,2.75 h1.75 l-3.25,-3.25 v-.75 h2.175 a1.75,1.75 0 0,0 -1.75,-1.25 z" />
				<path style="fill: black; stroke: none;" d="M3.25,8.5 h2.0 l-2.0,-2.0 z" />
				<text x="10.0" y="5.0" dy="0.5em">RSA</text>
			</g>
		</pattern>

		<style><![CDATA[
			#backgound {
				stroke: lightgray;
				stroke-width: .25;
				stroke-dasharray: 2;
				stroke-dashoffset: 1;
				filter: url(#paper);
				fill: white;
			}

			path {
				fill: none;
				stroke: black;
				stroke-width: .2;
			}

			#digits {
				filter: url(#draw);
			}

			#digits path {
				stroke-width: .4;
				stroke-linecap: round;
				stroke-linejoin: round;
			}

			.digit {
				stroke: black;
			}

			.base {
				stroke: blue;
			}

			.index {
				stroke: red;
			}

			.sign {
				stroke: gray;
			}

			.weight {
				stroke: magenta;
			}

			.value {
				stroke: purple;
			}

			#watermark {
				stroke: none;
				fill: url(#rsa);
			}

			#comment {
				stroke: none;
				fill: rgba(0, 0, 0, .125);
				transform: translate(0, 85px);
			}

			#comment text {
				fill: black;
				font-size: 2.5px;
				text-anchor: middle;
				transition: all 2s;
			}

			.show {
				opacity: 1;
				transform: translate(0, 0);
			}

			.hide {
				opacity: 0;
				transform: translate(0, 1em);
			}

			.draw {
				opacity: 0;
				animation-name: draw;
				animation-fill-mode: forwards;
				animation-timing-function: linear;
				animation-delay: .1s;
			}

			@keyframes draw {
				0% {
					opacity: 0;
				}
				5% {
					opacity: 1;
				}
				100% {
					opacity: 1;
					stroke-dashOffset: 0;
				}
			}

		]]></style>
	</defs>

	<g id="backgound">
		<rect x="0" y="0" width="100" height="100"/>
	</g>

	<g id="digits" style="transform: translate(0, -10px);">
		<rect x="0" y="0" width="100" height="100" style="stroke: none; fill: none;"/>
	</g>

	<g id="comment">
		<rect x="0" y="0" width="100" height="15" />
		<text x="50" y="8" class="hide">
			Переведём число из <tspan id="comment_base">2</tspan>-й системы счисления в десятичную.
		</text>
		<text x="50" y="8" class="hide">
			Пронумеруем разряды справа налево с нуля.
		</text>
		<text x="50" y="8" class="hide">
			<tspan y="5">
				Значение каждой цифры умножается
			</tspan>
			<tspan x="50" y="10">
				на основание системы счисления в степени номер разряда.
			</tspan>
		</text>
		<text x="50" y="8" class="hide">
			Вычисляем «вес» разрядов.
		</text>
		<text x="50" y="8" class="hide">
			Умножаем значение цифр на «веса» разрядов.
		</text>
		<text x="50" y="8" class="hide">
			Вычисляем сумму.
		</text>
		<text x="50" y="8" class="hide">
			Готово!
		</text>
	</g>

	<rect id="watermark" x="0" y="0" width="100" height="100" />
	<g style="fill: black; stroke: none; font-size: 5px; opacity: .125; transform: scale(.5);">
		<path style="fill: black; stroke: none;" d="M1.5,1.5 v7.0 h1.25 v-5.75 h2.25 a2.25,2.25 0 0,1 2.25,2.25 v.5 l-.5,-.5 h-1.75 l3.5,3.5 v-3.5 a3.5,3.5 0 0,0 -3.5,-3.5 z" />
		<path style="fill: black; stroke: none;" d="M3.25,3.25 v2.5 l2.75,2.75 h1.75 l-3.25,-3.25 v-.75 h2.175 a1.75,1.75 0 0,0 -1.75,-1.25 z" />
		<path style="fill: black; stroke: none;" d="M3.25,8.5 h2.0 l-2.0,-2.0 z" />
		<text x="10.0" y="5.0" dy="0.5em">Роганов С.А.</text>
	</g>

	<script>
	<![CDATA[
		(function(){
			var xmlns="http://www.w3.org/2000/svg";

			window.addEventListener("load", function(){

				/* random turbulence seed */
				document.querySelector("#draw #ft").setAttribute("seed", Math.floor(Math.random()*1024));
				document.querySelector("#paper #papft").setAttribute("seed", Math.floor(Math.random()*1024));

				/* some dom elements */
				Digits = document.querySelector("#digits"); // get digits group

				/* url parameters */
				var P = {};
				var pString = window.location.href.split("?")[1];
				if(pString){
					var pStrings = pString.split("&");
					for(i in pStrings){
						var p = pStrings[i].split("=");
						P[p[0]] = p[1];
					}
				}

				/* number and its numsys present */
				base = parseInt(P.b) || parseInt(P.base) || 2;
				var l = Math.min(Math.round(Math.log(1000)/Math.log(base)), 5);
				document.querySelector("#comment_base").innerHTML=base;
				var sDec = Math.pow(base, l);
				var eDec = Math.pow(base, l+1)-1;
				dec = parseInt(P.d) || parseInt(P.dec) || parseInt(P.n, base) || parseInt(P.num, base) || parseInt(P.number, base) || Math.round(sDec+Math.random()*(eDec-sDec)); // generate random number
				num = dec.toString(base); // get it's binary form

				// make digits and signs
				var o = {default: {w: 3, h: 10, dx: 3, dy: 0, dl: 5}};
				o = Object.assign(o, {x: 25, y: 25, w: o.default.w, h: o.default.h, dx: o.default.dx, dy: o.default.dy, dl: o.default.dl, c: "digit"});
				for(var i=0; i<num.length; i++){ // get all paths from digits
					o.n = num.charAt(i);
					digit(o); // get the digits of the numbers binary form
					o.x += o.default.dx;
				}
				
				//o.n = Object.assign(o, {n: base, y: })
				o.n = base;
				o.y += o.h;
				o.w /= 2;
				o.h /= 2;
				o.dx /= 2;
				o.y -= o.h/2;
				o.c = "base";
				o.toggle = true;
				number(o); // append index
				//number(base, 24+i*6, 31, 2, 5, 3, 0, "base", "toggle"); // append index
				o.toggle = false;

				for(var i=0; i<num.length; i++){ // digits indexes
					digit(i, 26+(num.length-i-1)*6, 18, 1.3, 4, "index");
				}
				// append equal sign
				digit("=", 25+(i+1)*6, 27.5, 4, 4, "sign", "toggle");

				var w = 4;
				var x = -w+1;
				for(var i=0; i<num.length; i++){ // get all paths from digits
					number(parseInt(num.charAt(i), base), x=x+=w, 45, 2.5, 9, w, 0, "digit");
					digit("x", x=x+=w, 47.5, 3, 3, "sign");
					number(base, x=x+=w, 45, 2.5, 9, 4, 0, "base");
					x+=base.toString().length*w;
					digit((num.length-i-1), x-w/4, 40, 2, 4, "index");
					if(i==num.length-1){
						digit("=", x, 47.5, 3, 3, "sign", "toggle");
					}else{
						digit("+", x, 47.5, 3, 3, "sign");
					}
				}

				var x = 1;
				for(var i=0; i<num.length; i++){
					digit(num.charAt(i), x, 60, 2.5, 9, "digit");
					x += 3.5;
					digit("x", x, 62.5, 3, 3, "sign");
					x += 3.5;
					var d = Math.pow(base, (num.length-i-1)).toString();
					d.split("").forEach(function(e,i,a){
						digit(e, x, 60, 2.5, 9, "weight");
						x += 3.5;
					});
					if(i==num.length-1){
						digit("=", x, 62.5, 3, 3, "sign", "toggle");
					}else{
						digit("+", x, 62.5, 3, 3, "sign");
					}
					x += 3.5;
				}

				var x = 1, y=75;
				for(var i=0; i<num.length; i++){
					var d = (Math.pow(base, (num.length-i-1))*parseInt(num.charAt(i))).toString();
					d.split("").forEach(function(e,i,a){
						digit(e, x, y, 2.5, 9, "value");
						x += 4;
					});
					if(i==num.length-1){
						digit("=", x, y+2.5, 3, 3, "sign", "toggle");
					}else{
						digit("+", x, y+2.5, 3, 3, "sign");
					}
					x += 4;
				}

				dec = dec.toString();
				for(var i=0; i<dec.length; i++){
					if(i==dec.length-1){
						digit(dec.charAt(i), x, y, 2.5, 9, "digit", "toggle");
					}else{
						digit(dec.charAt(i), x, y, 2.5, 9, "digit");
					}
					x += 3.5;
				}
				x += 2;
				digit(1, x-3, y+7, 1.4, 4, "base");
				digit(0, x+.35, y+7, 1.4, 4, "base");

				// make appear digits in serial

				var digits = document.querySelectorAll("#digits path");
				for(var i=0; i<digits.length-1; i++){
					digits[i].addEventListener("animationend", function(e){
						if(e.target.getAttribute("toggle")=="true"){
							var cts = document.querySelectorAll("#comment text");
							for(var i=0; i<cts.length; i++){
								if(cts[i].classList.contains("show"))break;
							}
							var ct = cts[i];
							ct.classList.toggle("show");
							ct.classList.toggle("hide");
							var ct = cts[i+1];
							var o = e.target.nextSibling;
							ct.addEventListener("transitionend", function(){
								o.classList.add("draw");
							});
							ct.classList.toggle("show");
							ct.classList.toggle("hide");
						}else{
							e.target.nextSibling.classList.add("draw");
						}
					});
				}
				digits[0].classList.add("draw");

				// comments
				CGT = document.querySelector("#comment text");
				CGT.classList.toggle("show");
				CGT.classList.toggle("hide");
			});

			function number(o){ // n, x, y, w, h, dx, dy, c, o
				var n = o.n || 0;
				console.log(n);
				n.toString().split("").forEach(function(e,i,a){
					o.n = e;
					o.toggle = o.toggle && i==--n.toString().length;
					digit(o);
					o.x += o.dx;
					//digit({n: e, x: x+dx*i, y: y+dy*i, w: w, h: h, c: c, o: i==--n.toString().length?o:null});
				});
			}

			function digit(O){//n, x, y, w, h, c, o
				var n = O.n || O.num || O.d || O.dig || O.digit || O.number;
				var x = O.x || O.X;
				var y = O.y || O.Y;
				var w = O.w || O.W || O.width;
				var h = O.h || O.H || O.height;
				var c = O.c || O.class || "digit";
				var o = O.o || O.toggle;
				var g = document.createDocumentFragment();
				switch(n){ // select sign to draw
					case 1:
					case "1":
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x) + "," + (y+h/3);
						d += " a" + (w*2)+","+(h/3*2) + " 0 0,0 " + (w)+","+(-h/3);
						d += " l" + (0) + "," + (h);
						p.setAttribute("d", d);
						g.appendChild(p);
						break;
					case 2:
					case "2":
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x) + "," + (y+w/2);
						d += " a" + (w/2)+","+(w/2) + " 0 1,1 " + (w)+","+(0);
						d += " a" + (w)+","+((h-w/2)/2) + " 0 0,1 " + (-w/2)+","+((h-w/2)/2);
						d += " a" + (w)+","+((h-w/2)/2) + " 0 0,0 " + (-w/2)+","+((h-w/2)/2);
						d += " l" + (w) + "," + (0);
						p.setAttribute("d", d);
						g.appendChild(p);
						break;
					case 3:
					case "3":
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x) + "," + (y+h/3);
						d += " a" + (w/2)+","+(h/2/2) + " 0 1,1 " + (w/2)+","+(h/3/2);
						d += " a" + (w/2)+","+(h/2/2) + " 0 1,1 " + (-w/2)+","+(h/3/2);
						p.setAttribute("d", d);
						g.appendChild(p);
						break;
					case 4:
					case "4":
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x+w/2) + "," + (y);
						d += " l" + (-w/2) + "," + (h*.7);
						d += " l" + (w) + "," + (0);
						p.setAttribute("d", d);
						g.appendChild(p);
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x+w) + "," + (y+h*.4);
						d += " l" + (0) + "," + (h*.6);
						p.setAttribute("d", d);
						g.appendChild(p);
						break;
					case 5:
					case "5":
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x+w*.15) + "," + (y);
						d += " l" + (-w*.15)+","+(h/2);
						d += " a" + (w/2)+","+(h/3) + " 0 1,1 " + (0)+","+(h/3);
						p.setAttribute("d", d);
						g.appendChild(p);
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x+w*.15) + "," + (y);
						d += " h" + (w*.85);
						p.setAttribute("d", d);
						g.appendChild(p);
						break;
					case 6:
					case "6":
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x+w) + "," + (y+h/4);
						d += " a" + (w/2)+","+(h/2) + " 0 0,0 " + (-w)+","+(h/2);
						d += " a" + (w/2)+","+(h/2) + " 0 0,0 " + (w/2)+","+(h/4);
						d += " a" + (w/2)+","+(h/2) + " 0 0,0 " + (w/2)+","+(-h/4);
						d += " a" + (w)+","+(h/4) + " 0 0,0 " + (-w)+","+(-h/4);
						p.setAttribute("d", d);
						g.appendChild(p);
						break;
					case 7:
					case "7":
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = "M" + x + "," + y;
						d += " l" + (w) + "," + (0);
						d += " a" + (w)+","+(h) + " 0 0,0 " + (-w/2)+","+(h);
						p.setAttribute("d", d);
						g.appendChild(p);
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = "M" + (x+w*.2) + "," + (y+h*.5);
						d += " h" + (w*.7);
						p.setAttribute("d", d);
						g.appendChild(p);
						break;
					case 8:
					case "8":
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x+w/2) + "," + (y);
						d += " a" + (w/2)+","+(h/2/2) + " 0 1,0 " + (0)+","+(h/2);
						d += " a" + (w/2)+","+(h/2/2) + " 0 1,1 " + (0)+","+(h/2);
						d += " a" + (w/2)+","+(h/2/2) + " 0 1,1 " + (0)+","+(-h/2);
						d += " a" + (w/2)+","+(h/2/2) + " 0 1,0 " + (0)+","+(-h/2);
						p.setAttribute("d", d);
						g.appendChild(p);
						break;
					case 9:
					case "9":
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x+w) + "," + (y+h/4);
						d += " a" + (w/2)+","+(h/2/2) + " 0 1,0 " + (0)+","+(+.1);
						d += " a" + (w/2)+","+(h) + " 0 0,1 " + (-w/2)+","+(h/4*3);
						d += " a" + (w/2)+","+(h/4/2) + " 0 0,1 " + (-w/2)+","+(-h/4/2);
						p.setAttribute("d", d);
						g.appendChild(p);
						break;
					case "a":
					case "A":
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x) + "," + (y+h);
						d += " l" + (w/2)+","+(-h);
						d += " l" + (w/2)+","+(h);
						p.setAttribute("d", d);
						g.appendChild(p);
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x+w*.1) + "," + (y+h*.7);
						d += " h" + (w*.85);
						p.setAttribute("d", d);
						g.appendChild(p);
						break;
					case "b":
					case "B":
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x) + "," + (y);
						d += " v" + (h);
						p.setAttribute("d", d);
						g.appendChild(p);
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x) + "," + (y);
						d += " a" + (w)+","+(h/4) + " 0 1,1 " + "0,"+(h/2);
						d += " a" + (w)+","+(h/4) + " 0 1,1 " + "0,"+(h/2);
						p.setAttribute("d", d);
						g.appendChild(p);
						break;
					case "c":
					case "C":
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x+w/2+w/4) + "," + (y+h/4);
						d += " a" + (w/2)+","+(h/2) + " 0 1,0 " + "0," + (h/2);
						p.setAttribute("d", d);
						g.appendChild(p);
						break;
					case "d":
					case "D":
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x) + "," + (y);
						d += " v" + (h);
						p.setAttribute("d", d);
						g.appendChild(p);
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x) + "," + (y);
						d += " a" + (w)+","+(h/2) + " 0 1,1 " + "0," + h;
						p.setAttribute("d", d);
						g.appendChild(p);
						break;
					case "e":
					case "E":
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x) + "," + (y);
						d += " v" + (h);
						p.setAttribute("d", d);
						g.appendChild(p);
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x) + "," + (y);
						d += " h" + (w);
						p.setAttribute("d", d);
						g.appendChild(p);
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x) + "," + (y+h/2);
						d += " h" + (w);
						p.setAttribute("d", d);
						g.appendChild(p);
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x) + "," + (y+h);
						d += " h" + (w);
						p.setAttribute("d", d);
						g.appendChild(p);
						break;
					case "f":
					case "F":
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x) + "," + (y);
						d += " v" + (h);
						p.setAttribute("d", d);
						g.appendChild(p);
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x) + "," + (y);
						d += " h" + (w);
						p.setAttribute("d", d);
						g.appendChild(p);
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x) + "," + (y+h/2);
						d += " h" + (w);
						p.setAttribute("d", d);
						g.appendChild(p);
						break;
					case "=":
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x) + "," + (y+h/4);
						d += " h" + (w);
						p.setAttribute("d", d);
						g.appendChild(p);
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x) + "," + (y+h/4*3);
						d += " h" + (w);
						p.setAttribute("d", d);
						g.appendChild(p);
						break;
					case "+":
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x+w/2) + "," + (y);
						d += " v" + (h);
						p.setAttribute("d", d);
						g.appendChild(p);
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x) + "," + (y+h/2);
						d += " h" + (w);
						p.setAttribute("d", d);
						g.appendChild(p);
						break;
					case "x":
					case "×":
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x) + "," + (y);
						d += " l" + (w) + "," + (h);
						p.setAttribute("d", d);
						g.appendChild(p);
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x+w) + "," + (y);
						d += " l" + (-w) + "," + (h);
						p.setAttribute("d", d);
						g.appendChild(p);
						break;
					case 0:
					case "0":
					default:
						var p = document.createElementNS(xmlns, "path");
						p.classList.add(c);
						var d = " M" + (x+w/2) + "," + (y);
						d += " a" + (w/2)+","+(h/2) + " 0 1,0 0.1,0";
						p.setAttribute("d", d);
						g.appendChild(p);
						break;
				}

				g.querySelectorAll("*").forEach(function(e,i,a){
					var l = e.getTotalLength();
					e.style.strokeDasharray = l+.1;
					e.style.strokeDashoffset = l+.1;
					var dur = l*55;
					if(c=="index")dur*=1.5;
					e.style.animationDuration = dur+"ms";
					e.style.opacity = 0;
				});

				if(o){
					p.setAttribute("toggle", "true");
				}

				Digits.appendChild(g);
				
				O.x += w;
			}
		})(this);
	]]>
	</script>
</svg>
